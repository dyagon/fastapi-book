"""hospital

Revision ID: b9c28717229a
Revises: ce8f3e4004b9
Create Date: 2025-09-07 16:52:10.849426

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b9c28717229a'
down_revision: Union[str, Sequence[str], None] = 'ce8f3e4004b9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('doctor_scheduling',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键Id'),
    sa.Column('dno', sa.Text(), server_default=sa.text("''::text"), nullable=False, comment='所属医生编号'),
    sa.Column('nsnum', sa.Integer(), nullable=True, comment='号源总数'),
    sa.Column('nsnumstock', sa.Integer(), nullable=True, comment='号源库存数'),
    sa.Column('nsindex', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='号源编号'),
    sa.Column('dnotime', sa.Date(), nullable=True, comment='排班日期，年-月-日'),
    sa.Column('tiemampmstr', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='号源时段字符串显示'),
    sa.Column('ampm', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='医生工作日：上午 还是 下午'),
    sa.Column('create_time', postgresql.TIMESTAMP(precision=0), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('enable', sa.Integer(), nullable=True, comment='是否可用（1：是 0 否）'),
    sa.Column('tiempm', postgresql.TIMESTAMP(precision=6), nullable=True, comment='医生工作日：号源时段(年-月-日 时：分)'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nsindex'),
    schema='hospital',
    comment='医生排班信息表'
    )
    op.create_index(op.f('ix_hospital_doctor_scheduling_dno'), 'doctor_scheduling', ['dno'], unique=False, schema='hospital')
    op.create_table('doctor_subscribeinfo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键Id'),
    sa.Column('dno', sa.Text(), server_default=sa.text("''::text"), nullable=False, comment='所属医生编号'),
    sa.Column('orderid', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='订单编号'),
    sa.Column('nsindex', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='订单编号'),
    sa.Column('statue', sa.Integer(), server_default=sa.text('1'), nullable=True, comment='订单状态（1:订单就绪，还没支付 2：已支付成功 3：取消订单'),
    sa.Column('visitday', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='就诊日期'),
    sa.Column('visittime', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='就诊时段'),
    sa.Column('payfee', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='支付诊费'),
    sa.Column('visit_uopenid', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='就诊人微信ID'),
    sa.Column('visit_uname', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='就诊人姓名'),
    sa.Column('visit_uphone', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='就诊人联系电话'),
    sa.Column('visit_usex', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='就诊人性别'),
    sa.Column('visit_uage', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='就诊人年龄'),
    sa.Column('visit_statue', sa.Integer(), server_default=sa.text('1'), nullable=True, comment='订单所属-就诊状态（1：待就诊 2：已就诊）'),
    sa.Column('create_time', postgresql.TIMESTAMP(precision=0), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('notify_callback_time', postgresql.TIMESTAMP(precision=0), nullable=True, comment='支付回调时间'),
    sa.PrimaryKeyConstraint('id'),
    schema='hospital',
    comment='预约信息详情表'
    )
    op.create_index(op.f('ix_hospital_doctor_subscribeinfo_dno'), 'doctor_subscribeinfo', ['dno'], unique=False, schema='hospital')
    op.create_index(op.f('ix_hospital_doctor_subscribeinfo_orderid'), 'doctor_subscribeinfo', ['orderid'], unique=False, schema='hospital')
    op.create_table('doctorinfo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键Id'),
    sa.Column('dno', sa.Text(), server_default=sa.text("''::text"), nullable=False, comment='医生编号'),
    sa.Column('dnname', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='医生名称'),
    sa.Column('dnmobile', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='医生号码'),
    sa.Column('sex', sa.Integer(), nullable=True, comment='医生性别：1： 男 2: 女 3：保密'),
    sa.Column('enable', sa.Integer(), nullable=True, comment='是否可用（1：是 0 否）'),
    sa.Column('rank', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='职称'),
    sa.Column('fee', sa.Numeric(), nullable=True, comment='医生诊费'),
    sa.Column('grade', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='等级'),
    sa.Column('destag', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='专业擅长标签'),
    sa.Column('addr', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='开诊地点'),
    sa.Column('pic', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='医生图片'),
    sa.Column('create_time', postgresql.TIMESTAMP(precision=0), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('describe', sa.Text(), nullable=True, comment='说明信息'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dno'),
    schema='hospital',
    comment='医生信息表'
    )
    op.create_table('hospitalinfo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='主键Id'),
    sa.Column('name', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='医院名称'),
    sa.Column('describe', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='医院描述'),
    sa.Column('describeimages', sa.Text(), server_default=sa.text("''::text"), nullable=True, comment='describeimages'),
    sa.Column('create_time', postgresql.TIMESTAMP(precision=0), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.PrimaryKeyConstraint('id'),
    schema='hospital',
    comment='医院信息表'
    )
    op.drop_table('user', schema='chatroom')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey')),
    schema='chatroom'
    )
    op.drop_table('hospitalinfo', schema='hospital')
    op.drop_table('doctorinfo', schema='hospital')
    op.drop_index(op.f('ix_hospital_doctor_subscribeinfo_orderid'), table_name='doctor_subscribeinfo', schema='hospital')
    op.drop_index(op.f('ix_hospital_doctor_subscribeinfo_dno'), table_name='doctor_subscribeinfo', schema='hospital')
    op.drop_table('doctor_subscribeinfo', schema='hospital')
    op.drop_index(op.f('ix_hospital_doctor_scheduling_dno'), table_name='doctor_scheduling', schema='hospital')
    op.drop_table('doctor_scheduling', schema='hospital')
    # ### end Alembic commands ###
